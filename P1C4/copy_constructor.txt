User-defined Copy Constructors and the default Copy Constructor

According to cplusplus.com:

    "A copy constructor is a special constructor for a class/struct that is used to make a copy of an existing instance."

The Implicit Copy Constructor:

    If a copy constructor is not declared, the compiler will use a default one implicitly. The default constructor performs a member-wise copy of the source object. This means that each member is initialized using the corresponding member of the initializer.

    If the object contains raw pointers, a memberwise copy may not be appropriate for use. This can cause problems with dangling pointers, double frees, and other undefined behaviour resulting from destructing objects.

    Deep Copy:

    We explicitly define our own copy constructor when we want to perform a deep copy. That is, instead of copying the pointer, our copy constructor will copy what the pointer points to. When the object gets destructed, it will be deleting the pointer to its own member.

References:

    Copy constructors, assignment operators, and exception safe assignment.
    https://cplusplus.com/articles/y8hv0pDG/

    14.14 - Introduction to the copy constructor.
    https://www.learncpp.com/cpp-tutorial/introduction-to-the-copy-constructor/